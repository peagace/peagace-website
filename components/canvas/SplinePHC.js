/*
  Auto-generated by Spline
*/
import * as THREE from 'three'
import useSpline from '@splinetool/r3f-spline'
import { OrthographicCamera, Wireframe } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'
import { useRef, useState } from 'react'
import { a, useSpring, animated, config } from '@react-spring/three'


export default function Scene({ ...props }) {
  const { nodes, materials } = useSpline('https://prod.spline.design/ctpoc7F9hJsVuust/scene.splinecode')

  useFrame((state, delta) => (ref.current.rotation.x += -0.0007) + (ref.current.rotation.y += 0.0002))
  const ref = useRef()

  return (
 <>
      <group {...props} dispose={null} ref={ref}>
        <scene name="Scene">       
          <mesh
            name="Cylinder"
            geometry={nodes.Cylinder.geometry}
            material={materials.ULTRAFRACTIVE}
            castShadow
            receiveShadow
            position={[600, 1250, 0]}
            rotation={[1.74, -0.1, -0.28]}
            scale={[6,3,6]}
          />     
          <hemisphereLight name="Default Ambient Light" intensity={500} color="white" />          
        </scene>
      </group>
    </>
  )
}

